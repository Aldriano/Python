# -*- coding: utf-8 -*-
"""Aula RVA - 23-03-2022.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DkNS0Qmelnz4AuDwCl_YbU_kTZGRGB_M
"""

import cv2
from cv2 import aruco
import numpy as np
from google.colab.patches import cv2_imshow
from IPython.display import display, Javascript
from google.colab.output import eval_js
from base64 import b64decode
from IPython.display import clear_output

def findArucoMarkers(img, markerSize=4, totalMarkers=50, drawn=True):
    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
    key = getattr(aruco, f'DICT_{markerSize}X{markerSize}_{totalMarkers}')
    
    arucoDict = aruco.Dictionary_get(key)
    arucoParam = aruco.DetectorParameters_create()

    bboxs, ids, reject = aruco.detectMarkers(gray, arucoDict, parameters=parameters)

    if drawn:
        aruco.drawDetectedMarkers(img, bboxs)

    return [bboxs, ids]

def arucoAug(bbox, id, img, imgAug, drawnId=True): 
    tl = bbox[0][0][0], bbox[0][0][1]
    tr = bbox[0][1][0], bbox[0][1][1]
    br = bbox[0][2][0], bbox[0][2][1]
    bl = bbox[0][3][0], bbox[0][3][1]

    h, w, c = imgAug.shape

    pts1 = np.array([tl, tr, br, bl])
    pts2 = np.float32([[0,0], [w,0], [w,h], [0, h]])

    matrix, _ = cv2.findHomography(pts2, pts1)

    imgout = cv2.warpPerspective(imgAug, matrix, (img.shape[1],img.shape[0]))

    cv2.fillConvexPoly(img, pts1.astype(int), (0,0,0))

    imgout = img + imgout
    
    return imgout

aruco_dict = aruco.Dictionary_get(aruco.DICT_4X4_250)
parameters = aruco.DetectorParameters_create()

imgAug = cv2.imread('/content/Daco_89500.png')

img = cv2.imread('/content/aruco_4x4_50.jpg')

bboxs, ids = findArucoMarkers(img)

imgouts = None
for bbox, id in zip(bboxs, ids):
    imgout = arucoAug(bbox, id, img, imgAug)

    if imgouts is None:
        imgouts = imgout
    else:
        imgouts += imgout

cv2_imshow(imgouts)

